{"version":3,"sources":["data/graph.png","constants/index.tsx","components/Card/Card.tsx","components/Footer/Footer.tsx","components/Search/Search.tsx","components/Filters/Filter.tsx","components/Chart/Chart.tsx","components/GraphModal/graphModal.tsx","App.tsx","index.tsx"],"names":["module","exports","colors","img","require","Card","props","onError","e","setState","image","state","nextProps","nextState","JSON","stringify","this","user","x","data","showUserMetrics","className","avatar","src","alt","Math","floor","random","length","name","occupation","style","margin","onClick","href","totoalImpressions","totalConversions","totalRevenue","toString","replace","React","Component","Footer","target","rel","Search","theme","createMuiTheme","overrides","MuiFormControl","marginNormal","marginTop","marginBottom","root","width","MuiFormHelperText","height","color","fontFamily","fontSize","lineHeight","MuiInput","underline","borderBottom","TextField","id","placeholder","label","value","searchName","type","onChange","InputProps","endAdornment","InputAdornment","position","onSearch","MuiInputLabel","formControl","MuiInputBase","input","MuiSelect","icon","useStyles","makeStyles","createStyles","container","display","flexWrap","padding","alignItems","Filter","classes","useState","sortBy","default","FormControl","InputLabel","htmlFor","Select","event","onApply","Input","none","MenuItem","sortByOptions","map","sort","key","override","css","ChartComponent","chartType","loader","sizeUnit","size","loading","options","hAxis","title","viewWindow","min","max","vAxis","category","GraphModal","period","graphData","dataMap","Map","i","set","useEffect","countGraph","forEach","ad","time","Date","getUTCMonth","day","getUTCDate","get","stateData","concat","Array","from","entries","processData","month","revenue","revenueGraph","MuiPaper","Dialog","maxWidth","open","fullScreen","onClose","toggleModal","aria-labelledby","DialogTitle","cat","userData","per","DialogContent","UserData","LogData","App","selectedUserId","showGraph","onChangeName","search","setTimeout","searchData","filter","toLowerCase","includes","parseData","has","user_id","push","a","b","userA","userB","openFilters","obj","marginLeft","Object","keys","constructor","find","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3edc8ac5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/graph.b8386de5.png\";","export const colors = [\n    \"blue\", \"pink\", 'brown', \"green\", \"purple\"\n];\n\nexport function parseNumber(x: number) {\n    return Math.floor(x).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport function getRandomColor() {\n    return colors[Math.floor(Math.random() * colors.length)];\n\n}\n\nexport function isEmpty(obj) {\n    return Object.keys(obj).length === 0 && obj.constructor === Object\n\n}\n\n","import React from 'react';\nimport {getRandomColor, parseNumber} from \"../../constants\";\nimport \"./Card.css\"\n\nconst img = require('../../data/graph.png');\n\n\nclass Card extends React.Component<any, any> {\n    private onError = (e) => {\n        this.setState({\n            image: false,\n\n        })\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            image: true\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n        return JSON.stringify(this.props.user) !== JSON.stringify(nextProps.user);\n    }\n\n    render() {\n        let {user, data, showUserMetrics} = this.props;\n        let {image} = this.state;\n\n\n        return (\n            <div className=\"col-lg-3 col-md-4 col-sm-4\">\n                <div className=\"card\">\n                    <div className={\"flex\"}>\n                        <div className=\"card-img-wrapper\">\n                            {image && user.avatar ?\n                                <img className=\"poster\" src={user.avatar} alt=\"Avatar\" onError={this.onError}/>\n                                :\n                                <div className={\"avatar-circle \" + getRandomColor()}>\n                                    <span className=\"initials\">{user.name[0]}</span>\n                                </div>\n                            }\n                        </div>\n                        <div>\n                            <div className=\"card-name-wrapper\">\n                                <span className={\"name\"}>{user.name}</span><br/>\n                                <span className={\"title\"}>{user.occupation}</span><br/><br/>\n                            </div>\n                        </div>\n\n                    </div>\n                    <div className=\"flex\">\n                        <div style={{margin: \"15px 10px 10px 10px\"}}>\n                            <img src={img} className={\"image-button image-hover-highlight\"}\n                                 alt={\"Avatar\"}\n                                 onClick={() => showUserMetrics(user)}/>\n                            <a href={\"#\"} className={\"link-button\"}\n                               onClick={() => showUserMetrics(user)}>Click to see data</a>\n                        </div>\n                        <div className=\"stats\">\n                            <span className=\"impressions\">{data.totoalImpressions}</span><br/>\n                            <span className=\"activity\">{\"Impressions\"}</span><br/>\n                            <span className=\"conversions\">{data.totalConversions}</span><br/>\n                            <span className=\"activity\">{\"Conversions\"}</span><br/>\n                            <div className=\"revenue\">${parseNumber(data.totalRevenue)}</div>\n                            <br/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Card;\n","import React, {Component} from \"react\";\n\nclass Footer extends Component {\n\n    render() {\n        return (\n\n            <div className=\"footer\">\n                <p>\n                    🚀Built with <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://facebook.github.io/react/\">React</a> and <a\n                    target=\"_blank\" href=\"https://react-google-charts.com/\">Google Charts</a>&nbsp;🚀\n                </p>\n                <p>\n                    See source code on <a target=\"_blank\" rel=\"noopener noreferrer\"\n                                          href=\"https://github.com/VikasDayananda/tune-app\">GitHub</a>\n                </p>\n                <p className=\"footerCopyRight\">© 2019 Vikas Dayananda</p>\n            </div>\n        )\n    }\n}\n\nexport default Footer;","import * as React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nconst theme = () => createMuiTheme({\n\n    overrides: {\n        MuiFormControl: {\n            marginNormal: {\n                marginTop: \"0 !important\",\n                marginBottom: 0,\n            },\n            root: {\n                width: \"100%\"\n            }\n        },\n\n        MuiFormHelperText: {\n            root: {\n                width: \"100%\",\n                height: \"10px\",\n                color: \"#595959\",\n                fontFamily: \"Helvetica\",\n                fontSize: \"10px\",\n                lineHeight: \"10px\"\n            }\n        },\n        MuiInput: {\n            underline: {\n                '&:before': { //underline color when textfield is inactive\n                    borderBottom: \"1px solid white\"\n                },\n                '&:hover:not($disabled):before': { //underline color when hovered\n                    borderBottom: \"1px solid white\"\n                },\n            }\n        }\n    }\n});\n\n\nexport const Search = (props: any) => {\n    return (\n        <MuiThemeProvider theme={theme()}>\n            <TextField\n                id=\"search\"\n                placeholder=\"Enter Name\"\n                label=\"Search By\"\n                value={props.searchName || \"\"}\n                type={\"text\"}\n                margin=\"normal\"\n                className=\"field\"\n                onChange={props.onChange}\n                InputProps={{\n                    endAdornment: (\n                        <InputAdornment position=\"end\">\n                            <i className=\"material-icons\" onClick={props.onSearch}>\n                                search\n                            </i>\n                        </InputAdornment>\n                    ),\n                }}\n            />\n        </MuiThemeProvider>\n    );\n};\n\n\n","import React from 'react';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core/styles\";\n\n\nconst theme = (props?:any) => createMuiTheme({\n\n        overrides: {\n            MuiFormControl: {\n                marginNormal: {\n                    marginTop: 8,\n                    marginBottom: 0,\n                },\n                root: {\n                    width: \"100%\"\n                }\n            },\n            MuiInput: {\n                underline: {\n                    \"&&&&:after\": {\n                        borderBottom: \"1px solid white\"\n                    }\n                },\n\n            },\n            MuiInputLabel: {\n                root: {\n                    color: \"white\",\n                    \"&$focused\": {\n                        color: props.theme === \"graph\" ? \"black\" : \"white\"\n                    }\n                },\n                formControl: {\n                    color: props.theme === \"graph\" ? \"black\" : \"white\"\n\n                }\n            },\n            MuiInputBase: {\n                input: {\n                    color: props.theme === \"graph\" ? \"black\" : \"white\",\n                    \"&:disabled\": {\n                        color: props.theme === \"graph\" ? \"black\" : \"white\"\n                    }\n                },\n                root: {\n                    color: props.theme === \"graph\" ? \"black\" : \"white\"\n                }\n\n            },\n            MuiFormHelperText: {\n                root: {\n                    height: \"10px\",\n                    fontFamily: \"Helvetica\",\n                    fontSize: \"10px\",\n                    lineHeight: \"10px\",\n                    color: \"white\"\n                }\n            },\n            MuiSelect: {\n                icon: {\n                    color: props.theme === \"graph\" ? \"black\" : \"white\"\n                }\n            }\n        }\n    })\n;\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n\n        input: {\n            color: \"white\"\n        },\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            width: 400,\n        },\n\n\n    }),\n);\n\nexport const Filter = (props: any) => {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        sortBy: props.default || null,\n    });\n\n\n    const handleChange = name => event => {\n        setState({...state, [name]: event.target.value});\n        props.onApply(event.target.value)\n    };\n\n    return (\n\n        <MuiThemeProvider theme={theme(props)}>\n            <FormControl>\n                {props.label &&\n                <InputLabel htmlFor=\"sortBy\">Sort By</InputLabel>\n\n                }\n                <Select\n                    className={classes.input}\n                    value={state.sortBy || \"\"}\n                    onChange={handleChange('sortBy')}\n                    input={<Input id=\"sortBy\"/>}\n                >\n                    {props.none &&\n                    <MenuItem value=\"\">\n                        <em>None</em>\n                    </MenuItem>\n                    }\n\n                    {props.sortByOptions.map(sort => {\n                        return <MenuItem value={sort.id}  key={sort.id}>{sort.name}</MenuItem>\n                    })}\n\n                </Select>\n            </FormControl>\n        </MuiThemeProvider>\n\n    );\n}","import * as React from 'react';\nimport {Chart} from \"react-google-charts\";\nimport \"./Chart.css\"\nimport {css} from '@emotion/core';\n\nimport GridLoader from 'react-spinners/GridLoader';\n\nconst override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin-top: -50px;\n    margin-left: -50px;\n`;\n\nexport const ChartComponent = (props: any) => {\n\n    return (\n        <div className={\"chart-div\"}>\n            <Chart\n                className={\"chart\"}\n                width=\"100%\"\n                height={'400px'}\n                chartType=\"LineChart\"\n                loader={<GridLoader\n                    css={override}\n                    sizeUnit={\"px\"}\n                    size={10}\n                    color={\"#0080FF\"}\n                    loading={true}\n                />}\n                data={props.data}\n                options={{\n                    hAxis: {\n                        title: 'period',\n                        viewWindow: {min: 1, max: 31}\n                    },\n                    vAxis: {\n                        title: props.category,\n                    },\n                }}\n            />\n        </div>\n    );\n\n}\n\n\n","import React, {useEffect} from \"react\";\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Filter} from \"../Filters/Filter\"\nimport {ChartComponent} from \"../Chart/Chart\";\nimport \"./graphModal.css\"\n\nconst theme = () => createMuiTheme({\n    overrides: {\n        MuiPaper: {\n            root: {\n                width: \"70%\",\n                height: \"70%\"\n            },\n\n        },\n    }\n});\n\n// There is only 2 months of data for 2013. So Periods can be either 4/2013 or 5/2013.\n\nexport const GraphModal = (props: any) => {\n    const [state, setState] = React.useState({\n        sortBy: 'conversion',\n        period: 4,\n        graphData: []\n    });\n    let data = props.graphData\n    let dataMap = new Map();\n    for (let i = 1; i <= 31; i++) {\n        dataMap.set(i, 0)\n    }\n\n    useEffect(() => {\n        countGraph(state.sortBy, state.period)\n    }, []);\n\n\n    const countGraph = (sortBy, period) => {\n        data.forEach(ad => {\n            let time = new Date(ad.time)\n            var month = time.getUTCMonth() + 1; //months from 1-12\n            if (month == period) {\n                var day = time.getUTCDate();\n                if (ad.type === sortBy) {\n                    if (dataMap.get(day)) {\n                        dataMap.set(day, dataMap.get(day) + 1)\n                    } else {\n                        dataMap.set(day, 1)\n                    }\n                }\n            }\n        });\n        let stateData: any = [['x', sortBy]].concat(Array.from(dataMap.entries()))\n        setState({...state, graphData: stateData, sortBy, period});\n    }\n\n    const revenueGraph = (period) => {\n        data.forEach(ad => {\n            let time = new Date(ad.time)\n            var month = time.getUTCMonth() + 1; //months from 1-12\n            if (month == period) {\n                var day = time.getUTCDate();\n                if (dataMap.get(day)) {\n                    dataMap.set(day, dataMap.get(day) + ad.revenue)\n                } else {\n                    dataMap.set(day, ad.revenue)\n                }\n            }\n        });\n        let stateData: any = [['x', 'revenue']].concat(Array.from(dataMap.entries()))\n        setState({...state, graphData: stateData, sortBy: \"revenue\", period});\n    }\n\n    const processData = (category ?: any, period?: any) => {\n        let sortBy = category || state.sortBy\n        let month = period || state.period\n        if (sortBy === \"revenue\") {\n            revenueGraph(month)\n        } else {\n            countGraph(sortBy, month)\n        }\n    };\n\n    return (\n        <MuiThemeProvider theme={theme()}>\n            <Dialog\n                maxWidth={\"lg\"}\n                open={props.open}\n                fullScreen={false}\n                onClose={props.toggleModal}\n                aria-labelledby=\"responsive-dialog-title\"\n            >\n                <DialogTitle\n                    id=\"responsive-dialog-title\">Graph showing\n                    <div className={\"filter-dropdown-graph\"}>\n                        <Filter\n                            none={false}\n                            theme={\"graph\"}\n                            default={\"conversion\"}\n                            sortByOptions={[\n                                {\n                                    name: \"Impression\",\n                                    id: \"impression\"\n                                },\n                                {\n                                    name: \"Conversion\",\n                                    id: \"conversion\"\n                                },\n                                {\n                                    name: \"Revenue\",\n                                    id: \"revenue\"\n                                }\n                            ]}\n                            onApply={(cat) => processData(cat, null)}\n\n                        /></div> Per day for {props.userData.name} during the period\n                    <div className={\"filter-dropdown-graph\"}>\n                        <Filter\n                            none={false}\n                            theme={\"graph\"}\n                            default={\"4\"}\n                            sortByOptions={[\n                                {\n                                    name: \"April 2013\",\n                                    id: \"4\"\n                                },\n                                {\n                                    name: \"May 2013\",\n                                    id: \"5\"\n                                },\n                            ]}\n                            onApply={(per) => processData(null, per)}\n\n                        /></div>\n                </DialogTitle>\n                <DialogContent>\n                    <ChartComponent data={state.graphData} category={state.sortBy}/>\n                    <span className=\"graph-info\">( Hover on tne graph to see the values )</span>\n                </DialogContent>\n            </Dialog>\n        </MuiThemeProvider>\n    );\n}","import React from 'react';\nimport './App.css';\nimport Card from \"./components/Card/Card\";\nimport Footer from \"./components/Footer/Footer\";\nimport {Search} from \"./components/Search/Search\";\nimport {Filter} from \"./components/Filters/Filter\";\nimport {GraphModal} from \"./components/GraphModal/graphModal\";\nimport {isEmpty} from \"./constants\";\n\ndeclare var require;\nvar UserData = require(\"./data/users.json\");\nvar LogData = require(\"./data/logs.json\");\n\n\nclass App extends React.Component<any, any> {\n\n    private showUserMetrics = (user) => {\n        this.setState({selectedUserId: user.id, showGraph: true})\n\n    }\n    private toggleModal = () => {\n        this.setState({showGraph: !this.state.showGraph})\n    }\n    private onChangeName = (e) => {\n        let userData = [...UserData]\n        this.setState({search: e.target.value})\n        setTimeout(() => {\n            let searchData = userData.filter(user => user.name.toLowerCase().includes(this.state.search.toLowerCase()))\n            this.setState({userData: searchData})\n        }, 100)\n\n\n    }\n\n    private parseData = () => {\n\n        // Aggregate the users.json and logs.json into single object\n\n        // userobj=[\n        //     userdId:{\n        //         totoalImpressions:0,\n        //         totalConversions:0,\n        //         totalRevenue:0,\n        //         graphData:[\n        //             {\n        //                // user logs\n        //             }\n        //         ]\n        //\n        //     }\n        // ]\n\n\n        let map = new Map();\n        LogData.forEach(data => {\n            if (map.has(data.user_id)) {\n                let userData: any = map.get(data.user_id)\n                if (data.type === \"impression\") {\n                    userData.totoalImpressions++;\n                } else {\n                    userData.totalConversions++;\n                    userData.totalRevenue += data.revenue;\n                }\n                userData.graphData.push(data)\n                map.set(data.user_id, userData)\n\n            } else {\n                let userData: any = {\n                    totoalImpressions: 0,\n                    totalConversions: 0,\n                    totalRevenue: 0,\n                    graphData: []\n                }\n                if (data.type === \"impression\") {\n                    userData.totoalImpressions++;\n                } else {\n                    userData.totalConversions++;\n                    userData.totalRevenue += data.revenue;\n\n                }\n                userData.graphData.push(data)\n                map.set(data.user_id, userData)\n            }\n        })\n        this.setState({data: map})\n    }\n\n    private onApply = (sortBy) => {\n        debugger\n        if (!sortBy) {\n            let userData = [...UserData]\n            this.setState({userData, openFilters: false})\n            return;\n        }\n        let {userData} = this.state\n        let {data} = this.state\n        if (sortBy === \"name\") {\n            userData.sort(function (a, b) {\n                if (a.name < b.name) {\n                    return -1;\n                }\n                if (a.name > b.name) {\n                    return 1;\n                }\n                return 0;\n            })\n\n        } else if (sortBy === \"impression\") {\n            userData.sort(function (a, b) {\n                let userA = data.get(a.id)\n                let userB = data.get(b.id)\n                if (userA.totoalImpressions > userB.totoalImpressions) {\n                    return -1;\n                }\n                if (userA.totoalImpressions < userB.totoalImpressions) {\n                    return 1;\n                }\n                return 0;\n\n            })\n        } else if (sortBy === \"conversion\") {\n            userData.sort(function (a, b) {\n                let userA = data.get(a.id)\n                let userB = data.get(b.id)\n                if (userA.totalConversions > userB.totalConversions) {\n                    return -1;\n                }\n                if (userA.totalConversions < userB.totalConversions) {\n                    return 1;\n                }\n                return 0;\n\n            })\n        } else {\n            userData.sort(function (a, b) {\n                let userA = data.get(a.id)\n                let userB = data.get(b.id)\n                if (userA.totalRevenue > userB.totalRevenue) {\n                    return -1;\n                }\n                if (userA.totalRevenue < userB.totalRevenue) {\n                    return 1;\n                }\n                return 0;\n\n            })\n        }\n        this.setState({userData, openFilters: false})\n\n    };\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userData: [...UserData],\n            data: {},\n            search: \"\",\n            openFilters: false,\n            showGraph: false,\n            selectedUserId: null\n        }\n\n    }\n\n    componentDidMount() {\n        this.parseData()\n    }\n\n\n    render() {\n        let {userData, search, data, showGraph, selectedUserId} = this.state;\n\n\n        return (\n            <div className=\"App\">\n                <h1 className={\"header\"}>Ad Testing Metrics</h1>\n                <div className=\"inner-container\">\n                    <div className=\"row\" style={{marginLeft: \"10px\"}}>\n                        <div className=\"col-md-4 col-lg-3 col-sm-12\">\n                            <Search onChange={this.onChangeName}\n                                    searchName={search}/>\n                        </div>\n                        <div className=\"col-md-4 col-lg-3 col-sm-12\">\n                            <Filter\n                                label={true}\n                                none={true}\n                                sortByOptions={[\n                                    {\n                                        name: \"Name\",\n                                        id: \"name\"\n                                    },\n                                    {\n                                        name: \"Impression\",\n                                        id: \"impression\"\n                                    },\n                                    {\n                                        name: \"Conversion\",\n                                        id: \"conversion\"\n                                    },\n                                    {\n                                        name: \"Revenue\",\n                                        id: \"revenue\"\n                                    }\n                                ]}\n                                onApply={this.onApply}\n\n                            />\n                        </div>\n                    </div>\n\n                    {!isEmpty(data) &&\n                    <div className=\"row\">\n                        {userData.map(user => {\n                            return <Card  key={user.id} user={user}\n                                         data={data.get(user.id)}\n                                         showUserMetrics={this.showUserMetrics}\n                            />\n                        })}\n                    </div>\n                    }\n                    {showGraph &&\n                    <GraphModal\n                        open={showGraph}\n                        toggleModal={this.toggleModal}\n                        userData={userData.find(user => user.id === selectedUserId)}\n                        graphData={data.get(selectedUserId).graphData}\n\n                    />\n                    }\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from \"./App\"\n\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root') as HTMLElement\n);\n"],"sourceRoot":""}