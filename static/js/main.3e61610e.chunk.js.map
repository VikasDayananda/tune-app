{"version":3,"sources":["components/Chart/Chart.tsx","components/Card/Card.tsx","components/Footer/Footer.tsx","App.tsx","index.tsx"],"names":["override","css","ChartComponent","props","state","data","this","dataMap","Map","i","set","forEach","ad","time","Date","month","getUTCMonth","day","getUTCDate","get","revenue","stateData","concat","Array","from","entries","setState","console","log","JSON","stringify","className","width","height","chartType","loader","sizeUnit","size","color","loading","options","hAxis","title","viewWindow","min","max","vAxis","legend","React","colors","Card","onError","e","image","impression","conversion","x","Math","floor","toString","replace","random","length","user","avatar","src","alt","getRandomColor","name","occupation","conversions","totoalImpressions","totalConversions","numberWithCommas","Component","Footer","target","href","UserData","require","LogData","App","searchName","search","value","parseData","map","has","user_id","userData","type","graphData","push","obj","Object","keys","constructor","id","onChange","isEmpty","style","margin","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3e61610e.chunk.js","sourcesContent":["import * as React from 'react';\nimport {Chart} from \"react-google-charts\";\nimport \"./Chart.css\"\nimport {css} from '@emotion/core';\n\nimport GridLoader from 'react-spinners/GridLoader';\n\nconst override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n    padding-top:40px;\n\n`;\n\nclass ChartComponent extends React.Component<any, any> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: []\n        }\n    }\n\n    componentDidMount() {\n        let data = this.props.data\n        let dataMap = new Map();\n        for (let i = 1; i <= 31; i++) {\n            dataMap.set(i, 0)\n        }\n\n        data.forEach(ad => {\n            let time = new Date(ad.time)\n            var month = time.getUTCMonth() + 1; //months from 1-12\n            if (month == 4) {\n                var day = time.getUTCDate();\n                var md = month + \"/\" + day\n                if (dataMap.get(day)) {\n                    dataMap.set(day, dataMap.get(day) + ad.revenue)\n                } else {\n                    dataMap.set(day, ad.revenue)\n                }\n            }\n        });\n        let stateData = [['', '']].concat(Array.from(dataMap.entries()))\n\n        this.setState({data: stateData})\n    }\n\n    render() {\n        console.log(JSON.stringify(this.state.data, null, 2))\n\n        return (\n            <div className={\"chart-div\"}>\n                <Chart\n                    className={\"chart\"}\n                    width=\"100%\"\n                    height={'150px'}\n                    chartType=\"LineChart\"\n                    loader={<GridLoader\n                        css={override}\n                        sizeUnit={\"px\"}\n                        size={10}\n                        color={\"#0080FF\"}\n                        loading={true}\n                    />}\n                    data={this.state.data}\n                    options={{\n                        hAxis: {\n                            title: 'day',\n                            viewWindow: {min: 1, max: 31}\n                        },\n                        vAxis: {\n                            title: 'revenue',\n                        },\n                        legend: 'none',\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default ChartComponent;\n","import React from 'react';\nimport \"./Card.css\"\nimport Chart from \"../Chart/Chart\";\n\nlet colors = [\n    \"blue\", \"pink\", 'brown', \"green\", \"purple\"\n]\n\nclass Card extends React.Component<any, any> {\n    onError = (e) => {\n        this.setState({\n            image: false,\n            impression: 0,\n            conversion: 0\n\n        })\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            image: true\n        }\n    }\n\n    numberWithCommas(x) {\n        return Math.floor(x).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n\n    getRandomColor() {\n        return colors[Math.floor(Math.random() * colors.length)];\n\n    }\n\n    render() {\n        let props = this.props;\n        let {image} = this.state;\n\n        return (\n            <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                <div className=\"card\">\n                    <div className={\"flex\"}>\n                        <div className=\"card-img-wrapper\">\n                            {image && props.user.avatar ?\n                                <img className=\"poster\" src={props.user.avatar} alt=\"Avatar\" onError={this.onError}/>\n                                :\n                                <div className={\"avatar-circle \" + this.getRandomColor()}>\n                                    <span className=\"initials\">{props.user.name[0]}</span>\n                                </div>\n                            }\n                        </div>\n                        <div>\n                            <div className=\"card-name-wrapper\">\n                                <span className={\"name\"}>{props.user.name}</span><br/>\n                                <span className={\"title\"}>{props.user.occupation}</span><br/><br/>\n                            </div>\n                        </div>\n\n                    </div>\n                    <div className=\"flex\">\n                        <Chart data={props.data.conversions}/>\n\n                        <div className=\"stats\">\n                            <span className=\"impressions\">{props.data.totoalImpressions}</span><br/>\n                            <span className=\"activity\">{\"Impressions\"}</span><br/>\n                            <span className=\"conversions\">{props.data.totalConversions}</span><br/>\n                            <span className=\"activity\">{\"Conversions\"}</span><br/>\n                            <div className=\"revenue\">${this.numberWithCommas(props.data.revenue)}</div>\n                            <br/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Card;\n","import React, {Component} from \"react\";\n\nclass Footer extends Component {\n\n    render() {\n        return (\n\n            <div className=\"footer\">\n                <p>\n                    🚀 Built with <a target=\"_blank\" href=\"https://facebook.github.io/react/\">React</a>🚀\n                </p>\n                <p>\n                    See source code on <a target=\"_blank\"\n                                          href=\"https://github.com/VikasDayananda/tune-app\">GitHub</a>\n                </p>\n                <p className=\"footerCopyRight\">© 2019 Vikas Dayananda</p>\n            </div>\n        )\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport Card from \"./components/Card/Card\";\nimport Footer from \"./components/Footer/Footer\";\n\ndeclare var require;\nvar UserData = require(\"./data/users.json\")\nvar LogData = require(\"./data/logs.json\")\n\nclass App extends React.Component<any, any> {\n\n    private searchName = (e) => {\n        this.setState({search: e.target.value})\n        // setTimeout(function () {\n        //     let searchData = UserData.filter(user => user.name.toLowerCase().includes(this.state.search))\n        //     this.setState({userData: searchData})\n        // }, 1000)\n\n    }\n\n    private parseData = (data) => {\n        let map = new Map();\n        LogData.forEach(data => {\n            if (map.has(data.user_id)) {\n                let userData: any = map.get(data.user_id)\n                if (data.type === \"impression\") {\n                    userData.totoalImpressions++;\n                } else {\n                    userData.totalConversions++;\n                    userData.revenue += data.revenue;\n                    let graphData: any = {\n                        time: data.time,\n                        revenue: data.revenue\n                    }\n                    userData.conversions.push(graphData)\n                }\n\n            } else {\n                let userData: any = {\n                    totoalImpressions: 0,\n                    totalConversions: 0,\n                    revenue: 0,\n                    conversions: []\n                }\n                if (data.type === \"impression\") {\n                    userData.totoalImpressions++;\n                } else {\n                    userData.totalConversions++;\n                    userData.revenue += data.revenue;\n                    let graphData = {\n                        time: data.time,\n                        revenue: data.revenue\n                    }\n                    userData.conversions.push(graphData)\n                }\n                map.set(data.user_id, userData)\n            }\n        })\n        this.setState({data: map})\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n            userData: UserData,\n            search: \"\"\n        }\n\n    }\n\n    componentDidMount() {\n        this.parseData(LogData)\n\n    }\n\n    isEmpty(obj) {\n        return Object.keys(obj).length === 0 && obj.constructor === Object\n\n    }\n\n    render() {\n        let {userData} = this.state\n        return (\n            <div className=\"App\">\n                <h1 className={\"header\"}>Ad Testing Metrics</h1>\n\n                <input type={\"text\"} id={\"search\"} value={this.state.search} onChange={(e) => this.searchName(e)}/>\n                {!this.isEmpty(this.state.data) &&\n                <div className=\"row\" style={{margin: \"50px\"}}>\n                    {userData.map(user => {\n                        return <Card user={user} data={this.state.data.get(user.id)}/>\n                    })}\n                </div>\n                }\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from \"./App\"\n\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root') as HTMLElement\n);\n"],"sourceRoot":""}