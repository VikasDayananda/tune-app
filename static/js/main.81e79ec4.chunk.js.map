{"version":3,"sources":["data/graph.png","components/Card/Card.tsx","components/Footer/Footer.tsx","components/Search/Search.tsx","components/Filters/Filter.tsx","components/Chart/Chart.tsx","components/GraphModal/graphModal.tsx","App.tsx","index.tsx"],"names":["module","exports","img","require","colors","styled","color","other","Button","background","props","border","borderRadius","boxShadow","height","padding","margin","Card","onError","e","setState","image","impression","conversion","state","x","Math","floor","toString","replace","random","length","nextProps","nextState","c","JSON","stringify","this","user","console","log","className","avatar","src","alt","getRandomColor","name","occupation","style","onClick","showUserMetrics","href","data","totoalImpressions","totalConversions","numberWithCommas","revenue","React","Component","Footer","target","Search","theme","createMuiTheme","overrides","MuiFormControl","marginNormal","marginTop","marginBottom","root","width","MuiFormHelperText","fontFamily","fontSize","lineHeight","MuiInput","underline","borderBottom","TextField","id","placeholder","label","value","searchName","type","onChange","InputProps","endAdornment","InputAdornment","position","onSearch","MuiInputLabel","formControl","MuiInputBase","input","MuiSelect","icon","useStyles","makeStyles","createStyles","container","display","flexWrap","alignItems","Filter","classes","useState","sortBy","default","FormControl","InputLabel","htmlFor","Select","event","onApply","Input","none","MenuItem","sortByOptions","map","sort","override","css","ChartComponent","chartType","loader","sizeUnit","size","loading","options","hAxis","title","viewWindow","min","max","vAxis","category","GraphModal","graphData","dataMap","Map","i","set","useEffect","conversionGraph","forEach","ad","time","Date","month","getUTCMonth","day","getUTCDate","get","stateData","concat","Array","from","entries","MuiPaper","Dialog","maxWidth","open","fullScreen","onClose","toggleModal","aria-labelledby","DialogTitle","impressionGraph","revenueGraph","userData","DialogContent","DialogActions","UserData","LogData","App","toggleFilters","openFilters","selectedUserId","showGraph","onChangeName","search","setTimeout","searchData","filter","toLowerCase","includes","parseData","has","user_id","push","period","a","b","userA","userB","filters","createRef","obj","Object","keys","constructor","marginLeft","isEmpty","find","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.81e79ec4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/graph.b8386de5.png\";","import React from 'react';\nimport \"./Card.css\"\nimport Button from '@material-ui/core/Button';\nimport {styled} from '@material-ui/core/styles';\n\nconst img = require('../../data/graph.png');\n\nconst MyButton = styled(({color, ...other}) => <Button {...other} />)({\n    background: props =>\n        props.color === 'red'\n            ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\n            : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: props =>\n        props.color === 'red'\n            ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\n            : '0 3px 5px 2px rgba(33, 203, 243, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    margin: 8,\n});\nlet colors = [\n    \"blue\", \"pink\", 'brown', \"green\", \"purple\"\n];\n\nclass Card extends React.Component<any, any> {\n    onError = (e) => {\n        this.setState({\n            image: false,\n            impression: 0,\n            conversion: 0\n\n        })\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            image: true\n        }\n    }\n\n    numberWithCommas(x) {\n        return Math.floor(x).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n\n    getRandomColor() {\n        return colors[Math.floor(Math.random() * colors.length)];\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n        let a = JSON.stringify(this.props.user)\n        let b = JSON.stringify(nextProps.user);\n        let c = a !== b\n        console.log(c)\n\n        return c\n    }\n\n    render() {\n        let props = this.props;\n        let {image} = this.state;\n        console.log(\"re-render\")\n\n        return (\n            <div className=\"col-lg-3 col-md-4 col-sm-4\">\n                <div className=\"card\">\n                    <div className={\"flex\"}>\n                        <div className=\"card-img-wrapper\">\n                            {image && props.user.avatar ?\n                                <img className=\"poster\" src={props.user.avatar} alt=\"Avatar\" onError={this.onError}/>\n                                :\n                                <div className={\"avatar-circle \" + this.getRandomColor()}>\n                                    <span className=\"initials\">{props.user.name[0]}</span>\n                                </div>\n                            }\n                        </div>\n                        <div>\n                            <div className=\"card-name-wrapper\">\n                                <span className={\"name\"}>{props.user.name}</span><br/>\n                                <span className={\"title\"}>{props.user.occupation}</span><br/><br/>\n                            </div>\n                        </div>\n\n                    </div>\n                    <div className=\"flex\">\n                        <div style={{margin:\"15px 10px 10px 10px\"}}>\n                            <img src={img} className={\"image-button image-hover-highlight\"}\n                                 onClick={() => props.showUserMetrics(props.user)}/>\n                            <a href={\"#\"} className={\"link-button\"}\n                               onClick={() => props.showUserMetrics(props.user)}>Click to see data</a>\n                        </div>\n                        <div className=\"stats\">\n                            <span className=\"impressions\">{props.data.totoalImpressions}</span><br/>\n                            <span className=\"activity\">{\"Impressions\"}</span><br/>\n                            <span className=\"conversions\">{props.data.totalConversions}</span><br/>\n                            <span className=\"activity\">{\"Conversions\"}</span><br/>\n                            <div className=\"revenue\">${this.numberWithCommas(props.data.revenue)}</div>\n                            <br/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Card;\n","import React, {Component} from \"react\";\n\nclass Footer extends Component {\n\n    render() {\n        return (\n\n            <div className=\"footer\">\n                <p>\n                    🚀 Built with <a target=\"_blank\" href=\"https://facebook.github.io/react/\">React</a>🚀\n                </p>\n                <p>\n                    See source code on <a target=\"_blank\"\n                                          href=\"https://github.com/VikasDayananda/tune-app\">GitHub</a>\n                </p>\n                <p className=\"footerCopyRight\">© 2019 Vikas Dayananda</p>\n            </div>\n        )\n    }\n}\n\nexport default Footer;","import * as React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nconst theme = () => createMuiTheme({\n\n    overrides: {\n        MuiFormControl: {\n            marginNormal: {\n                marginTop: \"0 !important\",\n                marginBottom: 0,\n            },\n            root: {\n                width: \"100%\"\n            }\n        },\n\n        MuiFormHelperText: {\n            root: {\n                width: \"100%\",\n                height: \"10px\",\n                color: \"#595959\",\n                fontFamily: \"Helvetica\",\n                fontSize: \"10px\",\n                lineHeight: \"10px\"\n            }\n        },\n        MuiInput: {\n            underline: {\n                '&:before': { //underline color when textfield is inactive\n                    borderBottom: \"1px solid white\"\n                },\n                '&:hover:not($disabled):before': { //underline color when hovered\n                    borderBottom: \"1px solid white\"\n                },\n            }\n        }\n    }\n});\n\n\ninterface IProps {\n\n    /** Input identifier. */\n    id: string;\n\n    /** Input Placeholder. */\n    placeholder?: any;\n\n    /** Input Label . */\n    label?: string;\n\n    /**  Controlled or Uncontrolled Value. */\n    value?: string;\n\n    /** Type- text/number/email.\n     * @default \"text\"\n     * */\n    type?: string;\n\n    /** Custom Classes */\n    className?: string;\n\n    /** On change handler */\n    onChange?: (e) => void;\n\n    /** On click handler */\n    onMouseUp?: (e) => void;\n\n    /** On Focus handler */\n    onKeyDown?: (e) => void;\n\n    /** Disable the input */\n    disabled?: boolean;\n\n    /** Field Validation.*/\n    error?: boolean;\n\n    /** Some information below the field.*/\n    helperText?: string;\n\n    /** Custom Material ui input props.*/\n    InputProps?: any;\n    inputProps?: any;\n\n    /** Field Validation.*/\n    required?: boolean;\n    autoFocus?: boolean;\n    maxLength?: any;\n    endAdornment?: any;\n}\n\nexport const Search = (props: any) => {\n    return (\n        <MuiThemeProvider theme={theme()}>\n            <TextField\n                id=\"search\"\n                placeholder=\"Enter Name\"\n                label=\"Search By\"\n                value={props.searchName}\n                type={\"text\"}\n                margin=\"normal\"\n                className=\"field\"\n                onChange={props.onChange}\n                InputProps={{\n                    endAdornment: (\n                        <InputAdornment position=\"end\">\n                            <i className=\"material-icons\" onClick={props.onSearch}>\n                                search\n                            </i>\n                        </InputAdornment>\n                    ),\n                }}\n            />\n        </MuiThemeProvider>\n    );\n};\n\n\n","import React from 'react';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core/styles\";\n\n\nconst theme = (props) => createMuiTheme({\n\n        overrides: {\n            MuiFormControl: {\n                marginNormal: {\n                    marginTop: 8,\n                    marginBottom: 0,\n                },\n                root: {\n                    width: \"100%\"\n                }\n            },\n            MuiInput: {\n                underline: {\n                    \"&&&&:after\": {\n                        borderBottom: \"1px solid white\"\n                    }\n                },\n\n            },\n            MuiInputLabel: {\n                root: {\n                    color: \"white\",\n                    \"&$focused\": {\n                        color: props.theme == \"graph\" ? \"black\" : \"white\"\n                    }\n                },\n                formControl: {\n                    color: props.theme == \"graph\" ? \"black\" : \"white\"\n\n                }\n            },\n            MuiInputBase: {\n                input: {\n                    color: props.theme == \"graph\" ? \"black\" : \"white\",\n                    \"&:disabled\": {\n                        color: props.theme == \"graph\" ? \"black\" : \"white\"\n                    }\n                },\n                root: {\n                    color: props.theme == \"graph\" ? \"black\" : \"white\"\n                }\n\n            },\n            MuiFormHelperText: {\n                root: {\n                    height: \"10px\",\n                    fontFamily: \"Helvetica\",\n                    fontSize: \"10px\",\n                    lineHeight: \"10px\",\n                    color: \"white\"\n                }\n            },\n            MuiSelect: {\n                icon: {\n                    color: props.theme == \"graph\" ? \"black\" : \"white\"\n                }\n            }\n        }\n    })\n;\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n\n        input: {\n            color: \"white\"\n        },\n        root: {\n            padding: '2px 4px',\n            display: 'flex',\n            alignItems: 'center',\n            width: 400,\n        },\n\n\n    }),\n);\n\nexport const Filter = (props: any) => {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        sortBy: props.default || null,\n    });\n\n\n    const handleChange = name => event => {\n        setState({...state, [name]: event.target.value});\n        props.onApply(event.target.value)\n    };\n\n    return (\n\n        <MuiThemeProvider theme={theme(props)}>\n            <FormControl>\n                {props.label &&\n                <InputLabel htmlFor=\"sortBy\">Sort By</InputLabel>\n\n                }\n                <Select\n                    className={classes.input}\n                    value={state.sortBy}\n                    onChange={handleChange('sortBy')}\n                    input={<Input id=\"sortBy\"/>}\n                >\n                    {props.none &&\n                    <MenuItem value=\"\">\n                        <em>None</em>\n                    </MenuItem>\n                    }\n\n                    {props.sortByOptions.map(sort => {\n                        return <MenuItem value={sort.id}>{sort.name}</MenuItem>\n                    })}\n\n                </Select>\n            </FormControl>\n        </MuiThemeProvider>\n\n    );\n}","import * as React from 'react';\nimport {Chart} from \"react-google-charts\";\nimport \"./Chart.css\"\nimport {css} from '@emotion/core';\n\nimport GridLoader from 'react-spinners/GridLoader';\n\nconst override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin-top: -50px;\n    margin-left: -50px;\n`;\n\nexport const ChartComponent = (props: any) => {\n\n\n    return (\n        <div className={\"chart-div\"}>\n            <Chart\n                className={\"chart\"}\n                width=\"100%\"\n                height={'400px'}\n                chartType=\"LineChart\"\n                loader={<GridLoader\n                    css={override}\n                    sizeUnit={\"px\"}\n                    size={10}\n                    color={\"#0080FF\"}\n                    loading={true}\n                />}\n                data={props.data}\n                options={{\n                    hAxis: {\n                        title: 'period',\n                        viewWindow: {min: 1, max: 31}\n                    },\n                    vAxis: {\n                        title: props.category,\n                    },\n                }}\n            />\n        </div>\n    );\n\n}\n\n\n","import React, {useState, useEffect} from \"react\";\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Filter} from \"../Filters/Filter\"\nimport {ChartComponent} from \"../Chart/Chart\";\nimport \"./graphModal.css\"\n\nconst theme = () => createMuiTheme({\n    overrides: {\n        MuiPaper: {\n            root: {\n                width: \"70%\",\n                height: \"70%\"\n            },\n\n        },\n    }\n});\n\n\nexport const GraphModal = (props: any) => {\n    const [state, setState] = React.useState({\n        sortBy: props.default || null,\n        graphData: []\n    });\n    let data = props.graphData\n    let dataMap = new Map();\n    for (let i = 1; i <= 31; i++) {\n        dataMap.set(i, 0)\n    }\n\n    useEffect(() => {\n        conversionGraph()\n    }, []);\n\n\n    const impressionGraph = () => {\n        data.forEach(ad => {\n            let time = new Date(ad.time)\n            var month = time.getUTCMonth() + 1; //months from 1-12\n            if (month == 4) {\n                var day = time.getUTCDate();\n                var md = month + \"/\" + day\n                if (ad.type == \"impression\") {\n                    if (dataMap.get(day)) {\n                        dataMap.set(day, dataMap.get(day) + 1)\n                    } else {\n                        dataMap.set(day, 1)\n                    }\n                }\n            }\n        });\n        let stateData: any = [['x', 'impression']].concat(Array.from(dataMap.entries()))\n        setState({...state, graphData: stateData});\n    }\n    const conversionGraph = () => {\n        data.forEach(ad => {\n            let time = new Date(ad.time)\n            var month = time.getUTCMonth() + 1; //months from 1-12\n            if (month == 4) {\n                var day = time.getUTCDate();\n                var md = month + \"/\" + day\n                if (ad.type == \"conversion\") {\n                    if (dataMap.get(day)) {\n                        dataMap.set(day, dataMap.get(day) + 1)\n                    } else {\n                        dataMap.set(day, 1)\n                    }\n                }\n            }\n        });\n        let stateData: any = [['x', 'conversion']].concat(Array.from(dataMap.entries()))\n        setState({...state, graphData: stateData});\n    }\n    const revenueGraph = () => {\n        data.forEach(ad => {\n            let time = new Date(ad.time)\n            var month = time.getUTCMonth() + 1; //months from 1-12\n            if (month == 4) {\n                var day = time.getUTCDate();\n                var md = month + \"/\" + day\n                if (dataMap.get(day)) {\n                    dataMap.set(day, dataMap.get(day) + ad.revenue)\n                } else {\n                    dataMap.set(day, ad.revenue)\n                }\n            }\n        });\n        let stateData: any = [['x', 'revenue']].concat(Array.from(dataMap.entries()))\n        setState({...state, graphData: stateData});\n    }\n    const processData = category => {\n        switch (category) {\n            case \"impressions\":\n                impressionGraph()\n                break;\n            case \"conversions\":\n                conversionGraph()\n                break;\n            case \"revenue\":\n                revenueGraph()\n                break;\n            default:\n                break\n\n        }\n\n\n    };\n\n    return (\n        <MuiThemeProvider theme={theme()}>\n            <Dialog\n                maxWidth={\"lg\"}\n                open={props.open}\n                fullScreen={false}\n                onClose={props.toggleModal}\n                aria-labelledby=\"responsive-dialog-title\"\n            >\n                <DialogTitle\n                    id=\"responsive-dialog-title\">Graph showing\n                    <div className={\"filter-dropdown-graph\"}>\n                        <Filter\n                            none={false}\n                            theme={\"graph\"}\n                            default={\"conversions\"}\n                            sortByOptions={[\n                                {\n                                    name: \"Impressions\",\n                                    id: \"impressions\"\n                                },\n                                {\n                                    name: \"Conversions\",\n                                    id: \"conversions\"\n                                },\n                                {\n                                    name: \"Revenue\",\n                                    id: \"revenue\"\n                                }\n                            ]}\n                            onApply={processData}\n\n                        /></div> Per day for {props.userData.name}</DialogTitle>\n                <DialogContent>\n                    <ChartComponent data={state.graphData} category={state.sortBy}/>\n                </DialogContent>\n                <DialogActions>\n\n                </DialogActions>\n            </Dialog>\n        </MuiThemeProvider>\n    );\n}","import React from 'react';\nimport './App.css';\nimport Card from \"./components/Card/Card\";\nimport Footer from \"./components/Footer/Footer\";\nimport {Search} from \"./components/Search/Search\";\nimport {Filter} from \"./components/Filters/Filter\";\n\nimport {createMuiTheme} from \"@material-ui/core/styles\";\nimport {GraphModal} from \"./components/GraphModal/graphModal\";\n\ndeclare var require;\nvar UserData = require(\"./data/users.json\");\nvar LogData = require(\"./data/logs.json\");\n\n\nconst theme = () => createMuiTheme({\n\n        overrides: {\n\n            MuiPaper: {\n                root: {\n                    width: \"60%\",\n                    height: \"70%\"\n                },\n\n            },\n        }\n    })\n;\n\nclass App extends React.Component<any, any> {\n\n    toggleFilters = () => {\n        this.setState({openFilters: !this.state.openFilters});\n    };\n    showUserMetrics = (user) => {\n        this.setState({selectedUserId: user.id, showGraph: true})\n\n    }\n    toggleModal = () => {\n        this.setState({showGraph: !this.state.showGraph})\n    }\n    private onChangeName = (e) => {\n        let userData = [...UserData]\n        this.setState({search: e.target.value})\n        setTimeout(() => {\n            let searchData = userData.filter(user => user.name.toLowerCase().includes(this.state.search.toLowerCase()))\n            this.setState({userData: searchData})\n        }, 100)\n\n\n    }\n    private searchName = () => {\n\n\n    }\n    private parseData = (data) => {\n        let map = new Map();\n        LogData.forEach(data => {\n            if (map.has(data.user_id)) {\n                let userData: any = map.get(data.user_id)\n                if (data.type === \"impression\") {\n                    userData.totoalImpressions++;\n                } else {\n                    userData.totalConversions++;\n                    userData.revenue += data.revenue;\n                }\n                userData.graphData.push(data)\n                map.set(data.user_id, userData)\n\n            } else {\n                let userData: any = {\n                    totoalImpressions: 0,\n                    totalConversions: 0,\n                    revenue: 0,\n                    graphData: []\n                }\n                if (data.type === \"impression\") {\n                    userData.totoalImpressions++;\n                } else {\n                    userData.totalConversions++;\n                    userData.revenue += data.revenue;\n\n                }\n                userData.graphData.push(data)\n                map.set(data.user_id, userData)\n            }\n        })\n        this.setState({data: map})\n    }\n    private onApply = (sortBy, period) => {\n        debugger\n        if (!sortBy) {\n            let userData = [...UserData]\n            this.setState({userData, openFilters: false})\n            return;\n        }\n        let {userData} = this.state\n        let {data} = this.state\n        if (sortBy === \"name\") {\n            userData.sort(function (a, b) {\n                if (a.name < b.name) {\n                    return -1;\n                }\n                if (a.name > b.name) {\n                    return 1;\n                }\n                return 0;\n            })\n\n        } else if (sortBy === \"impressions\") {\n            userData.sort(function (a, b) {\n                let userA = data.get(a.id)\n                let userB = data.get(b.id)\n                if (userA.totoalImpressions > userB.totoalImpressions) {\n                    return -1;\n                }\n                if (userA.totoalImpressions < userB.totoalImpressions) {\n                    return 1;\n                }\n                return 0;\n\n            })\n        } else if (sortBy === \"conversions\") {\n            userData.sort(function (a, b) {\n                let userA = data.get(a.id)\n                let userB = data.get(b.id)\n                if (userA.totalConversions > userB.totalConversions) {\n                    return -1;\n                }\n                if (userA.totalConversions < userB.totalConversions) {\n                    return 1;\n                }\n                return 0;\n\n            })\n        } else {\n            userData.sort(function (a, b) {\n                let userA = data.get(a.id)\n                let userB = data.get(b.id)\n                if (userA.revenue > userB.revenue) {\n                    return -1;\n                }\n                if (userA.revenue < userB.revenue) {\n                    return 1;\n                }\n                return 0;\n\n            })\n        }\n        this.setState({userData, openFilters: false})\n\n    }\n    private filters: React.RefObject<any>;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userData: [...UserData],\n            data: {},\n            search: \"\",\n            openFilters: false,\n            showGraph: false,\n            selectedUserId: 78\n        }\n        this.filters = React.createRef<any>();\n\n    }\n\n    componentDidMount() {\n        this.parseData(LogData)\n\n    }\n\n    isEmpty(obj) {\n        return Object.keys(obj).length === 0 && obj.constructor === Object\n\n    }\n\n    render() {\n        let {userData} = this.state\n\n\n        return (\n            <div className=\"App\">\n                <h1 className={\"header\"}>Ad Testing Metrics</h1>\n                <div className=\"inner-container\">\n                    <div className=\"row\" style={{marginLeft: \"10px\"}}>\n                        <div className=\"col-md-4 col-lg-3 col-sm-12\">\n                            <Search onSearch={this.searchName} onChange={this.onChangeName}\n                                    searchName={this.state.search}/>\n                        </div>\n                        <div className=\"col-md-4 col-lg-3 col-sm-12\">\n                            <Filter\n                                label={true}\n                                none={true}\n                                sortByOptions={[\n                                    {\n                                        name: \"Name\",\n                                        id: \"name\"\n                                    },\n                                    {\n                                        name: \"Impressions\",\n                                        id: \"impressions\"\n                                    },\n                                    {\n                                        name: \"Conversions\",\n                                        id: \"conversions\"\n                                    },\n                                    {\n                                        name: \"Revenue\",\n                                        id: \"revenue\"\n                                    }\n                                ]}\n                                onApply={this.onApply}\n\n                            />\n                        </div>\n                    </div>\n\n                    {!this.isEmpty(this.state.data) &&\n                    <div className=\"row\">\n                        {userData.map(user => {\n                            return <Card user={user}\n                                         data={this.state.data.get(user.id)}\n                                         showUserMetrics={this.showUserMetrics}\n                            />\n                        })}\n                    </div>\n                    }\n                    {this.state.showGraph &&\n                    <GraphModal\n                        open={this.state.showGraph}\n                        toggleModal={this.toggleModal}\n                        userData={this.state.userData.find(user => user.id === this.state.selectedUserId)}\n                        graphData={this.state.data.get(this.state.selectedUserId).graphData}\n\n                    />\n                    }\n\n                </div>\n                <Footer/>\n            </div>\n        )\n            ;\n    }\n}\n\nexport default App;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from \"./App\"\n\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root') as HTMLElement\n);\n"],"sourceRoot":""}